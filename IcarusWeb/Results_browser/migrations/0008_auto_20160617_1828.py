# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-06-17 16:28
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('Results_browser', '0007_auto_20160615_2301'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Climate_information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField()),
                ('wind', models.FloatField()),
                ('air_relative_humidity', models.FloatField()),
                ('pluviosity', models.FloatField()),
                ('date', models.DateField()),
                ('time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Collect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('code', models.CharField(max_length=255)),
                ('climate_information_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Climate_information')),
            ],
        ),
        migrations.CreateModel(
            name='Collection_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specimen_stage', models.CharField(max_length=255)),
                ('method', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Gene_bank_registry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('datum', models.CharField(max_length=255)),
                ('altitude', models.FloatField()),
                ('area_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Area_type')),
            ],
        ),
        migrations.CreateModel(
            name='MosquitoLab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_number', models.IntegerField()),
                ('book_code', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Photophysiognomy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Political_location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journal_name', models.CharField(max_length=255)),
                ('journal_page_number', models.IntegerField()),
                ('journal_volume', models.CharField(max_length=255)),
                ('journal_title', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('author_name', models.CharField(max_length=255)),
                ('year', models.DateField()),
                ('doi', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Sample_group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField()),
                ('classification_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Classification')),
                ('sample_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='Sample_sound_wingbeat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.File')),
                ('sample_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='Sample_wing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_left_compatible', models.BooleanField()),
                ('is_right_compatible', models.BooleanField()),
                ('is_internal_compatible', models.BooleanField()),
                ('is_external_compatible', models.BooleanField()),
                ('number_of_laminae', models.IntegerField()),
                ('sample_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='Sound',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sampling_rate', models.FloatField()),
                ('encoding', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('inventory_code', models.CharField(max_length=255)),
                ('storage_medium', models.CharField(max_length=255)),
                ('storage_location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Location')),
            ],
        ),
        migrations.AddField(
            model_name='sample_image_wing',
            name='file_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Results_browser.File'),
        ),
        migrations.AddField(
            model_name='sample_sound_wingbeat',
            name='sound_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Sound'),
        ),
        migrations.AddField(
            model_name='location',
            name='political_location_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Political_location'),
        ),
        migrations.AddField(
            model_name='collect',
            name='collection_type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Collection_type'),
        ),
        migrations.AddField(
            model_name='collect',
            name='location_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Location'),
        ),
        migrations.AddField(
            model_name='collect',
            name='publication_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Publication'),
        ),
        migrations.AddField(
            model_name='sample',
            name='collect_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Collect'),
        ),
        migrations.AddField(
            model_name='sample',
            name='gene_bank_registry_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Gene_bank_registry'),
        ),
        migrations.AddField(
            model_name='sample',
            name='mosquitolab_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Results_browser.MosquitoLab'),
        ),
        migrations.AddField(
            model_name='sample',
            name='phytophysiognomy_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Photophysiognomy'),
        ),
        migrations.AddField(
            model_name='sample',
            name='storage_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Storage'),
        ),
        migrations.AddField(
            model_name='sample_input',
            name='sample_sound_wingbeat_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Results_browser.Sample_sound_wingbeat'),
        ),
    ]
